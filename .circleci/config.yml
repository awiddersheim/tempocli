version: 2
jobs:
  python35: &pytest-template
    docker:
      - image: circleci/python:3.5
    environment:
      TOXENV: py35
    steps:
      - checkout
      - run: pip install --user tox
      - run: /home/circleci/.local/bin/tox -- --color yes --cov-report html --junitxml test_results/pytest/results.xml
      - run: tar --directory htmlcov -czvf coverage.tar.gz .
      - store_artifacts:
          path: coverage.tar.gz
          destination: coverage.tar.gz
      - store_artifacts:
          path: test_results/pytest/results.xml
          destination: pytest_results.xml
      - store_test_results:
          path: test_results

  python36:
    <<: *pytest-template
    docker:
      - image: circleci/python:3.6
    environment:
      TOXENV: py36

  python37:
    <<: *pytest-template
    docker:
      - image: circleci/python:3.7
    environment:
      TOXENV: py37

  flake8:
    docker:
      - image: circleci/python:3
    environment:
      TOXENV: flake8
    steps:
      - checkout
      - run: pip install --user tox
      - run: /home/circleci/.local/bin/tox

  build_dist:
    docker:
      - image: circleci/python:3
    environment:
      TOXENV: build
    steps:
      - checkout
      - run: pip install --user tox
      - run: |
          export SETUPTOOLS_SCM_PREVIOUS_TAG="$(git tag | sort -V | grep "^v.*" | grep -v ".dev" | tail -n 1)"
          /home/circleci/.local/bin/tox
      - store_artifacts:
          path: dist
          destination: packages
      - persist_to_workspace:
          root: .
          paths:
            - dist

  build_docker:
    docker:
      - image: circleci/python:3
    steps:
      - checkout
      - setup_remote_docker
      - run: |
          export SETUPTOOLS_SCM_PREVIOUS_TAG="$(git tag | sort -V | grep "^v.*" | grep -v ".dev" | tail -n 1)"
          export DOCKER_TAG="$(python setup.py --version)"
          mkdir -p docker-cache
          docker build --tag awiddersheim/tempocli:${DOCKER_TAG} .
          docker save --output docker-cache/image.tar awiddersheim/tempocli:${DOCKER_TAG}
      - persist_to_workspace:
          root: .
          paths:
            - docker-cache

  deploy:
    docker:
      - image: circleci/python:3
    environment:
      TOXENV: deploy
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - setup_remote_docker
      - run: pip install --user tox
      - run: |
          export SETUPTOOLS_SCM_PREVIOUS_TAG="$(git tag | sort -V | grep "^v.*" | grep -v ".dev" | tail -n 1)"
          export DOCKER_TAG="$(python setup.py --version)"
          export GITHUB_RELEASE_CICD_REPO="$(python setup.py --name)"
          export GITHUB_RELEASE_CICD_CREATE_TAG="v$(python setup.py --version)"
          export GITHUB_RELEASE_CICD_CREATE_MESSAGE="$([ -z "${CIRCLE_TAG}" ] && git show --no-patch --pretty=format:%s%n%n%b ${CIRCLE_SHA1} || git tag --list --format="%(contents)" ${CIRCLE_TAG})"
          export GITHUB_RELEASE_CICD_CREATE_PRERELEASE="$([ -z "${CIRCLE_TAG}" ] && echo true || echo false)"
          export GITHUB_RELEASE_CICD_CREATE_TARGET="${CIRCLE_SHA1}"
          docker load --input /tmp/workspace/docker-cache/image.tar
          [ -z "${CIRCLE_TAG}" ] || docker tag awiddersheim/tempocli:${DOCKER_TAG} awiddersheim/tempocli:latest
          docker login --username ${DOCKER_USERNAME} --password ${DOCKER_PASSWORD}
          /home/circleci/.local/bin/tox -- '/tmp/workspace/dist/*'
          docker push awiddersheim/tempocli

workflows:
  version: 2
  test-build-deploy:
    jobs:
      - build_dist:
          filters:
            tags:
              only: /^v[0-9.]*/
      - build_docker:
          filters:
            tags:
              only: /^v[0-9.]*/
      - flake8:
          filters:
            tags:
              only: /^v[0-9.]*/
      - python35:
          filters:
            tags:
              only: /^v[0-9.]*/
      - python36:
          filters:
            tags:
              only: /^v[0-9.]*/
      - python37:
          filters:
            tags:
              only: /^v[0-9.]*/
      - deploy:
          requires:
            - build_dist
            - build_docker
            - flake8
            - python35
            - python36
            - python37
          filters:
            branches:
              only: master
            tags:
              only: /^v[0-9.]*/
