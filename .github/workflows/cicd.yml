name: CI/CD

on:
  push:
    branches:
      - "*"
    tags:
      - "v*"

jobs:
  test:
    strategy:
      matrix:
        python_version:
          - "3.8"
          - "3.9"
          - "3.10"
    name: test-python-${{ matrix.python_version }}
    runs-on: ubuntu-latest
    container:
      image: python:${{ matrix.python_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Intall dependencies
        run: pip install tox

      - name: Run tox
        run: TOXENV="py$(echo "${{ matrix.python_version }}" | sed "s/\.//g")" tox -- --color yes --cov-report html --junitxml test_results/pytest/results.xml

      - name: Package coverage
        run: tar --directory htmlcov -czvf coverage.tar.gz .

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage_${{ matrix.python_version }}.tar.gz
          path: coverage.tar.gz

      - name: Upload test result artifact
        uses: actions/upload-artifact@v3
        with:
          name: pytest_results_${{ matrix.python_version }}.xml
          path: test_results/pytest/results.xml

  flake8:
    runs-on: ubuntu-latest
    container:
      image: python:3
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Intall dependencies
        run: pip install tox

      - name: Run tox
        run: tox
        env:
          TOXENV: flake8

  build-dist:
    runs-on: ubuntu-latest
    container:
      image: python:3
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Intall dependencies
        run: pip install tox

      - name: Run tox
        run: tox
        env:
          TOXENV: build

      - name: Upload package artifact
        uses: actions/upload-artifact@v3
        with:
          name: packages
          path: dist

      - name: Get version
        id: get-version
        run: echo "::set-output name=version::$(python setup.py --version)"

  build-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: |
            SETUPTOOLS_SCM_PRETEND_VERSION=0.0.1
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  push-docker:
    runs-on: ubuntu-latest
    needs:
      - test
      - flake8
      - build-dist
      - build-docker
    if: github.ref_type	== 'tag' || github.ref_name == 'master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push version tags
        uses: docker/build-push-action@v2
        with:
          context: .
          target: prod
          build-args: |
            SETUPTOOLS_SCM_PRETEND_VERSION=${{ needs.build-dist.outputs.version}}
          tags: |
            docker.io/${{ github.repository }}:${{ needs.build-dist.outputs.version }}
            ghcr.io/${{ github.repository }}:${{ needs.build-dist.outputs.version }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          push: true

      - name: Push latest tags
        uses: docker/build-push-action@v2
        with:
          context: .
          target: prod
          build-args: |
            SETUPTOOLS_SCM_PRETEND_VERSION=${{ needs.build-dist.outputs.version}}
          tags: |
            docker.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          push: true

      - name: Move cache
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  release-pypi:
    runs-on: ubuntu-latest
    container:
      image: python:3
    needs:
      - push-docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Intall dependencies
        run: pip install tox

      - name: Download package artifact
        id: download
        uses: actions/download-artifact@v2
        with:
          name: packages
          path: dist

      - name: Run tox
        run: tox -- 'dist/*'
        env:
          TOXENV: deploy
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}

  release-github:
    runs-on: ubuntu-latest
    needs:
      - build-dist
      - push-docker
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download package artifact
      id: download
      uses: actions/download-artifact@v2
      with:
        name: packages
        path: dist

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ needs.build-dist.outputs.version}}
        files: dist/*
        fail_on_unmatched_files: true
        prerelease: ${{ github.ref_type	== 'branch' }}
